<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="d1/d9b/classouzel_1_1_vector2" kind="class" language="C++" prot="public">
    <compoundname>ouzel::Vector2</compoundname>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="d1/d9b/classouzel_1_1_vector2_1a9e451fe4f3982bd403bd3f3ba57d55dc" prot="public" static="yes" mutable="no">
        <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>const Vector2 ouzel::Vector2::ZERO</definition>
        <argsstring></argsstring>
        <name>ZERO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="17" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d9b/classouzel_1_1_vector2_1a09071aba008019f7de56928c2159a8a9" prot="public" static="yes" mutable="no">
        <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>const Vector2 ouzel::Vector2::ONE</definition>
        <argsstring></argsstring>
        <name>ONE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="18" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d9b/classouzel_1_1_vector2_1ac84232f50ee436819b30e717a2821bbd" prot="public" static="yes" mutable="no">
        <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>const Vector2 ouzel::Vector2::UNIT_X</definition>
        <argsstring></argsstring>
        <name>UNIT_X</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="19" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d9b/classouzel_1_1_vector2_1a1d1848b5e1a97756b301bf310fd55bf5" prot="public" static="yes" mutable="no">
        <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>const Vector2 ouzel::Vector2::UNIT_Y</definition>
        <argsstring></argsstring>
        <name>UNIT_Y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="20" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d9b/classouzel_1_1_vector2_1aeca469e48e88a1addd17cee5672672fa" prot="public" static="yes" mutable="no">
        <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>const Vector2 ouzel::Vector2::NEGATIVE_UNIT_X</definition>
        <argsstring></argsstring>
        <name>NEGATIVE_UNIT_X</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="21" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d9b/classouzel_1_1_vector2_1a3f1ba2aa715d9b93d179b1ea0443835f" prot="public" static="yes" mutable="no">
        <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>const Vector2 ouzel::Vector2::NEGATIVE_UNIT_Y</definition>
        <argsstring></argsstring>
        <name>NEGATIVE_UNIT_Y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="22" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="d1/d9b/classouzel_1_1_vector2_1add5572a5efca26d0c9ef2488d295de70" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float ouzel::Vector2::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <initializer>= 0.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="24" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d9b/classouzel_1_1_vector2_1a108dffc23ef059b7e27fd1d53dac1475" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float ouzel::Vector2::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <initializer>= 0.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="25" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a5bab0f5b8de053b28b3e0210b3dd8719" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ouzel::Vector2::Vector2</definition>
        <argsstring>()</argsstring>
        <name>Vector2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="27" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a8c96cef18cc203ad8aeba6b563aff0f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ouzel::Vector2::Vector2</definition>
        <argsstring>(float aX, float aY)</argsstring>
        <name>Vector2</name>
        <param>
          <type>float</type>
          <declname>aX</declname>
        </param>
        <param>
          <type>float</type>
          <declname>aY</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="31" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1ab23e23e14f971f8a986cce208af5d69c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ouzel::Vector2::Vector2</definition>
        <argsstring>(const Vector2 &amp;p1, const Vector2 &amp;p2)</argsstring>
        <name>Vector2</name>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="36" column="1" bodyfile="ouzel/math/Vector2.cpp" bodystart="21" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1ad7035b73893e99352a3f47d66c8efdfb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ouzel::Vector2::Vector2</definition>
        <argsstring>(const Vector2 &amp;copy)</argsstring>
        <name>Vector2</name>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="38" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a476ade9cf6c7d37970d0acdf5cb8eb54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ouzel::Vector2::Vector2</definition>
        <argsstring>(const Vector3 &amp;vec)</argsstring>
        <name>Vector2</name>
        <param>
          <type>const <ref refid="dc/d28/classouzel_1_1_vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="43" column="1" bodyfile="ouzel/math/Vector2.cpp" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a7fd5488ff3761bf210828c07c040b01f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
        <definition>Vector2 &amp; ouzel::Vector2::operator=</definition>
        <argsstring>(const Vector3 &amp;vec)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="dc/d28/classouzel_1_1_vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="45" column="1" bodyfile="ouzel/math/Vector2.cpp" bodystart="31" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a96125d259ceb275e7c06a4f10918ac5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ouzel::Vector2::Vector2</definition>
        <argsstring>(const Vector4 &amp;vec)</argsstring>
        <name>Vector2</name>
        <param>
          <type>const <ref refid="de/dc8/classouzel_1_1_vector4" kindref="compound">Vector4</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="47" column="1" bodyfile="ouzel/math/Vector2.cpp" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a93808aab62e51eda4244d138e1b551c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
        <definition>Vector2 &amp; ouzel::Vector2::operator=</definition>
        <argsstring>(const Vector4 &amp;vec)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="de/dc8/classouzel_1_1_vector4" kindref="compound">Vector4</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="49" column="1" bodyfile="ouzel/math/Vector2.cpp" bodystart="43" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1aa245c03604118250f8eff6bc6ad17bb7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ouzel::Vector2::isZero</definition>
        <argsstring>() const</argsstring>
        <name>isZero</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="51" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a0d979ba26368c703913aadbe074fa8f4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ouzel::Vector2::isOne</definition>
        <argsstring>() const</argsstring>
        <name>isOne</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="56" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a71bf43965831e220a6c1a2ae64c80ea3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ouzel::Vector2::add</definition>
        <argsstring>(const Vector2 &amp;vec)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="63" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="63" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a0d428f174c7f7e577616ddab410e8ade" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ouzel::Vector2::clamp</definition>
        <argsstring>(const Vector2 &amp;min, const Vector2 &amp;max)</argsstring>
        <name>clamp</name>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="71" column="1" bodyfile="ouzel/math/Vector2.cpp" bodystart="62" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a35086001b9ff286fe8b91badcbad90ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float ouzel::Vector2::distance</definition>
        <argsstring>(const Vector2 &amp;vec) const</argsstring>
        <name>distance</name>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="75" column="1" bodyfile="ouzel/math/Vector2.cpp" bodystart="98" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a1e78b228a9d882cdb7eef002dcc3c802" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float ouzel::Vector2::distanceSquared</definition>
        <argsstring>(const Vector2 &amp;vec) const</argsstring>
        <name>distanceSquared</name>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="77" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="77" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1aeebe5180f2d2a8ee3a6c0499bf534853" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float ouzel::Vector2::dot</definition>
        <argsstring>(const Vector2 &amp;vec) const</argsstring>
        <name>dot</name>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="84" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a004bfc989e95fbb87f592440bde2f6f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float ouzel::Vector2::length</definition>
        <argsstring>() const</argsstring>
        <name>length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="94" column="1" bodyfile="ouzel/math/Vector2.cpp" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a1cbf0437f6f8628601771edc5212f8ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float ouzel::Vector2::lengthSquared</definition>
        <argsstring>() const</argsstring>
        <name>lengthSquared</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="96" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a11a20ecf75819213c8aa12ff95ec31e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ouzel::Vector2::negate</definition>
        <argsstring>()</argsstring>
        <name>negate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="101" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="101" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1abd8c94671b96d5213f7d01579fdd51c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ouzel::Vector2::normalize</definition>
        <argsstring>()</argsstring>
        <name>normalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="107" column="1" bodyfile="ouzel/math/Vector2.cpp" bodystart="111" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a116dff3cb805fba9eb63a8c9ba2f7165" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ouzel::Vector2::scale</definition>
        <argsstring>(float scalar)</argsstring>
        <name>scale</name>
        <param>
          <type>float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="109" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="109" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1af34ed0313b002bc370eeebc363f6f1f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ouzel::Vector2::scale</definition>
        <argsstring>(const Vector2 &amp;scale)</argsstring>
        <name>scale</name>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="115" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="115" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1aa1004b6d45613fe21e6360b04cfbcef7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ouzel::Vector2::rotate</definition>
        <argsstring>(float angle)</argsstring>
        <name>rotate</name>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="121" column="1" bodyfile="ouzel/math/Vector2.cpp" bodystart="126" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1adb350c1164580476a0487859c4ef1602" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ouzel::Vector2::rotate</definition>
        <argsstring>(const Vector2 &amp;point, float angle)</argsstring>
        <name>rotate</name>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="122" column="1" bodyfile="ouzel/math/Vector2.cpp" bodystart="136" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1ada2056c83c1d8a7082f3effd4c5955d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ouzel::Vector2::set</definition>
        <argsstring>(float newX, float newY)</argsstring>
        <name>set</name>
        <param>
          <type>float</type>
          <declname>newX</declname>
        </param>
        <param>
          <type>float</type>
          <declname>newY</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="124" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="124" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a37f7b5cc4e5e1b392bcd0e92649a191e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ouzel::Vector2::set</definition>
        <argsstring>(const Vector2 &amp;p1, const Vector2 &amp;p2)</argsstring>
        <name>set</name>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="130" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="130" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a048b8cb1e7e5806afc7e15f2c4867a4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ouzel::Vector2::subtract</definition>
        <argsstring>(const Vector2 &amp;vec)</argsstring>
        <name>subtract</name>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="136" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="136" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a72d8c935c1943208300c5010de707dd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ouzel::Vector2::smooth</definition>
        <argsstring>(const Vector2 &amp;target, float elapsedTime, float responseTime)</argsstring>
        <name>smooth</name>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>float</type>
          <declname>elapsedTime</declname>
        </param>
        <param>
          <type>float</type>
          <declname>responseTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="148" column="1" bodyfile="ouzel/math/Vector2.cpp" bodystart="157" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1ac2ebf7b3a4d0cfbfae374f92df91c096" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float ouzel::Vector2::getMin</definition>
        <argsstring>() const</argsstring>
        <name>getMin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="150" column="1" bodyfile="ouzel/math/Vector2.cpp" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1aa3e4690cfb23a1437c7b5edc29f90202" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float ouzel::Vector2::getMax</definition>
        <argsstring>() const</argsstring>
        <name>getMax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="151" column="1" bodyfile="ouzel/math/Vector2.cpp" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1ac69f89b11af6e4a8e339aeb13512eedf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 ouzel::Vector2::operator+</definition>
        <argsstring>(const Vector2 &amp;vec) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="153" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="153" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a503ad83fe1c9f275c020db3799e752d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
        <definition>Vector2&amp; ouzel::Vector2::operator+=</definition>
        <argsstring>(const Vector2 &amp;vec)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="158" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="158" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a5e26b38515df0dbe649967842aff377e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 ouzel::Vector2::operator-</definition>
        <argsstring>(const Vector2 &amp;vec) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="165" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a05927a0d91a8a8b01531dc1d1f0c65a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
        <definition>Vector2&amp; ouzel::Vector2::operator-=</definition>
        <argsstring>(const Vector2 &amp;vec)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="170" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="170" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1ad4ea19a80d46ded3d6fe1d04f1ae5791" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 ouzel::Vector2::operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="177" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a74ab214df15e2e3ed7235c64ab8ca5c3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 ouzel::Vector2::operator*</definition>
        <argsstring>(float scalar) const</argsstring>
        <name>operator*</name>
        <param>
          <type>float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="182" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="182" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1adb6c8937f95a8c8dded066ef54f72bf2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
        <definition>Vector2&amp; ouzel::Vector2::operator*=</definition>
        <argsstring>(float scalar)</argsstring>
        <name>operator*=</name>
        <param>
          <type>float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="187" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="187" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1af9395bb994828964bb00ea32d12ea2e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref></type>
        <definition>Vector2 ouzel::Vector2::operator/</definition>
        <argsstring>(float scalar) const</argsstring>
        <name>operator/</name>
        <param>
          <type>float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="194" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="194" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a2ba7a460f6296ada5c6cc9a1f38aecf7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
        <definition>Vector2&amp; ouzel::Vector2::operator/=</definition>
        <argsstring>(float scalar)</argsstring>
        <name>operator/=</name>
        <param>
          <type>float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="199" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="199" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1ad7c0d9fb60c34975b9fb365eb8012eb9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ouzel::Vector2::operator&lt;</definition>
        <argsstring>(const Vector2 &amp;vec) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="206" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="206" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a5dd4ab9ddff1115b9eee7afda220b582" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ouzel::Vector2::operator==</definition>
        <argsstring>(const Vector2 &amp;vec) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="215" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="215" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a739453507385c44c51aa4ff3b3869317" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ouzel::Vector2::operator!=</definition>
        <argsstring>(const Vector2 &amp;vec) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="220" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="220" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a6395fc02588a52285763f577a789d470" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float ouzel::Vector2::getAngle</definition>
        <argsstring>() const</argsstring>
        <name>getAngle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="225" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="225" bodyend="228"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a5ccef596256040f84230ae603c86c5d6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float ouzel::Vector2::angle</definition>
        <argsstring>(const Vector2 &amp;v1, const Vector2 &amp;v2)</argsstring>
        <name>angle</name>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="61" column="1" bodyfile="ouzel/math/Vector2.cpp" bodystart="50" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a341089451373b7f253635176a7c2622d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ouzel::Vector2::add</definition>
        <argsstring>(const Vector2 &amp;v1, const Vector2 &amp;v2, Vector2 &amp;dst)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>v2</declname>
        </param>
        <param>
          <type><ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="69" column="1" bodyfile="ouzel/math/Vector2.cpp" bodystart="56" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1aa5c9b70708e0b74a67dd6181059ca852" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ouzel::Vector2::clamp</definition>
        <argsstring>(const Vector2 &amp;vec, const Vector2 &amp;min, const Vector2 &amp;max, Vector2 &amp;dst)</argsstring>
        <name>clamp</name>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type><ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="73" column="1" bodyfile="ouzel/math/Vector2.cpp" bodystart="79" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1a3f6b56594e40ccc8822feeb2b99a41a0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float ouzel::Vector2::dot</definition>
        <argsstring>(const Vector2 &amp;v1, const Vector2 &amp;v2)</argsstring>
        <name>dot</name>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="89" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="d1/d9b/classouzel_1_1_vector2_1acecae3491d89bf92d193e643729be291" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ouzel::Vector2::subtract</definition>
        <argsstring>(const Vector2 &amp;v1, const Vector2 &amp;v2, Vector2 &amp;dst)</argsstring>
        <name>subtract</name>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const <ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>v2</declname>
        </param>
        <param>
          <type><ref refid="d1/d9b/classouzel_1_1_vector2" kindref="compound">Vector2</ref> &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/math/Vector2.hpp" line="142" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="142" bodyend="146"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1915">
        <label>ouzel::Vector2</label>
        <link refid="d1/d9b/classouzel_1_1_vector2"/>
        <childnode refid="1915" relation="usage">
          <edgelabel>ONE</edgelabel>
          <edgelabel>ZERO</edgelabel>
          <edgelabel>NEGATIVE_UNIT_X</edgelabel>
          <edgelabel>UNIT_X</edgelabel>
          <edgelabel>NEGATIVE_UNIT_Y</edgelabel>
          <edgelabel>UNIT_Y</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ouzel/math/Vector2.hpp" line="15" column="1" bodyfile="ouzel/math/Vector2.hpp" bodystart="14" bodyend="229"/>
    <listofallmembers>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a71bf43965831e220a6c1a2ae64c80ea3" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>add</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a341089451373b7f253635176a7c2622d" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>add</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a5ccef596256040f84230ae603c86c5d6" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>angle</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a0d428f174c7f7e577616ddab410e8ade" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>clamp</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1aa5c9b70708e0b74a67dd6181059ca852" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>clamp</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a35086001b9ff286fe8b91badcbad90ae" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>distance</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a1e78b228a9d882cdb7eef002dcc3c802" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>distanceSquared</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1aeebe5180f2d2a8ee3a6c0499bf534853" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>dot</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a3f6b56594e40ccc8822feeb2b99a41a0" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>dot</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a6395fc02588a52285763f577a789d470" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>getAngle</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1aa3e4690cfb23a1437c7b5edc29f90202" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>getMax</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1ac2ebf7b3a4d0cfbfae374f92df91c096" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>getMin</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a0d979ba26368c703913aadbe074fa8f4" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>isOne</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1aa245c03604118250f8eff6bc6ad17bb7" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>isZero</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a004bfc989e95fbb87f592440bde2f6f7" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>length</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a1cbf0437f6f8628601771edc5212f8ae" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>lengthSquared</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a11a20ecf75819213c8aa12ff95ec31e1" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>negate</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1aeca469e48e88a1addd17cee5672672fa" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>NEGATIVE_UNIT_X</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a3f1ba2aa715d9b93d179b1ea0443835f" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>NEGATIVE_UNIT_Y</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1abd8c94671b96d5213f7d01579fdd51c2" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>normalize</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a09071aba008019f7de56928c2159a8a9" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>ONE</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a739453507385c44c51aa4ff3b3869317" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>operator!=</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a74ab214df15e2e3ed7235c64ab8ca5c3" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>operator*</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1adb6c8937f95a8c8dded066ef54f72bf2" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>operator*=</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1ac69f89b11af6e4a8e339aeb13512eedf" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>operator+</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a503ad83fe1c9f275c020db3799e752d3" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>operator+=</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a5e26b38515df0dbe649967842aff377e" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>operator-</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1ad4ea19a80d46ded3d6fe1d04f1ae5791" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>operator-</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a05927a0d91a8a8b01531dc1d1f0c65a4" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>operator-=</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1af9395bb994828964bb00ea32d12ea2e2" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>operator/</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a2ba7a460f6296ada5c6cc9a1f38aecf7" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>operator/=</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1ad7c0d9fb60c34975b9fb365eb8012eb9" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>operator&lt;</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a7fd5488ff3761bf210828c07c040b01f" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>operator=</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a93808aab62e51eda4244d138e1b551c4" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>operator=</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a5dd4ab9ddff1115b9eee7afda220b582" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>operator==</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1aa1004b6d45613fe21e6360b04cfbcef7" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>rotate</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1adb350c1164580476a0487859c4ef1602" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>rotate</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a116dff3cb805fba9eb63a8c9ba2f7165" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>scale</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1af34ed0313b002bc370eeebc363f6f1f3" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>scale</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1ada2056c83c1d8a7082f3effd4c5955d6" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>set</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a37f7b5cc4e5e1b392bcd0e92649a191e" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>set</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a72d8c935c1943208300c5010de707dd0" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>smooth</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a048b8cb1e7e5806afc7e15f2c4867a4b" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>subtract</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1acecae3491d89bf92d193e643729be291" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>subtract</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1ac84232f50ee436819b30e717a2821bbd" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>UNIT_X</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a1d1848b5e1a97756b301bf310fd55bf5" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>UNIT_Y</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a5bab0f5b8de053b28b3e0210b3dd8719" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>Vector2</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a8c96cef18cc203ad8aeba6b563aff0f8" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>Vector2</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1ab23e23e14f971f8a986cce208af5d69c" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>Vector2</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1ad7035b73893e99352a3f47d66c8efdfb" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>Vector2</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a476ade9cf6c7d37970d0acdf5cb8eb54" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>Vector2</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a96125d259ceb275e7c06a4f10918ac5a" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>Vector2</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1add5572a5efca26d0c9ef2488d295de70" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>x</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a108dffc23ef059b7e27fd1d53dac1475" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>y</name></member>
      <member refid="d1/d9b/classouzel_1_1_vector2_1a9e451fe4f3982bd403bd3f3ba57d55dc" prot="public" virt="non-virtual"><scope>ouzel::Vector2</scope><name>ZERO</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
