<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="d4/de2/_cache_8cpp" kind="file" language="C++">
    <compoundname>Cache.cpp</compoundname>
    <includes refid="d6/d4c/_cache_8hpp" local="yes">Cache.hpp</includes>
    <includes refid="db/db9/_engine_8hpp" local="yes">Engine.hpp</includes>
    <includes refid="dc/d94/_renderer_8hpp" local="yes">graphics/Renderer.hpp</includes>
    <includes refid="dd/d41/_texture_resource_8hpp" local="yes">graphics/TextureResource.hpp</includes>
    <includes refid="d5/da1/_shader_resource_8hpp" local="yes">graphics/ShaderResource.hpp</includes>
    <includes refid="df/d2e/_particle_definition_8hpp" local="yes">scene/ParticleDefinition.hpp</includes>
    <includes refid="dd/df2/_sprite_frame_8hpp" local="yes">scene/SpriteFrame.hpp</includes>
    <includes refid="d7/da4/_file_system_8hpp" local="yes">files/FileSystem.hpp</includes>
    <includes refid="d1/d99/_sound_data_wave_8hpp" local="yes">audio/SoundDataWave.hpp</includes>
    <includes refid="d2/d1a/_sound_data_vorbis_8hpp" local="yes">audio/SoundDataVorbis.hpp</includes>
    <includes refid="d9/d5d/_b_m_font_8hpp" local="yes">gui/BMFont.hpp</includes>
    <includes refid="db/d7c/_t_t_font_8hpp" local="yes">gui/TTFont.hpp</includes>
    <incdepgraph>
      <node id="2706">
        <label>atomic</label>
      </node>
      <node id="2704">
        <label>functional</label>
      </node>
      <node id="2713">
        <label>queue</label>
      </node>
      <node id="2682">
        <label>limits</label>
      </node>
      <node id="2725">
        <label>events/EventDispatcher.hpp</label>
        <link refid="d1/d90/_event_dispatcher_8hpp_source"/>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2714" relation="include">
        </childnode>
        <childnode refid="2713" relation="include">
        </childnode>
        <childnode refid="2703" relation="include">
        </childnode>
        <childnode refid="2681" relation="include">
        </childnode>
        <childnode refid="2676" relation="include">
        </childnode>
        <childnode refid="2726" relation="include">
        </childnode>
        <childnode refid="2735" relation="include">
        </childnode>
      </node>
      <node id="2689">
        <label>graphics/DataType.hpp</label>
        <link refid="de/ddb/_data_type_8hpp_source"/>
        <childnode refid="2681" relation="include">
        </childnode>
      </node>
      <node id="2697">
        <label>scene/ParticleDefinition.hpp</label>
        <link refid="df/d2e/_particle_definition_8hpp_source"/>
        <childnode refid="2674" relation="include">
        </childnode>
        <childnode refid="2683" relation="include">
        </childnode>
      </node>
      <node id="2681">
        <label>cstdint</label>
      </node>
      <node id="2723">
        <label>math/Quaternion.hpp</label>
        <link refid="d6/d42/_quaternion_8hpp_source"/>
        <childnode refid="2716" relation="include">
        </childnode>
        <childnode refid="2690" relation="include">
        </childnode>
      </node>
      <node id="2731">
        <label>scene/Component.hpp</label>
        <link refid="da/d5c/_component_8hpp_source"/>
        <childnode refid="2673" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2676" relation="include">
        </childnode>
        <childnode refid="2718" relation="include">
        </childnode>
        <childnode refid="2716" relation="include">
        </childnode>
        <childnode refid="2691" relation="include">
        </childnode>
        <childnode refid="2687" relation="include">
        </childnode>
        <childnode refid="2695" relation="include">
        </childnode>
      </node>
      <node id="2724">
        <label>files/FileSystem.hpp</label>
        <link refid="d7/da4/_file_system_8hpp_source"/>
        <childnode refid="2673" relation="include">
        </childnode>
        <childnode refid="2674" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2681" relation="include">
        </childnode>
        <childnode refid="2676" relation="include">
        </childnode>
      </node>
      <node id="2711">
        <label>core/Timer.hpp</label>
        <link refid="dd/d91/_timer_8hpp_source"/>
        <childnode refid="2676" relation="include">
        </childnode>
      </node>
      <node id="2679">
        <label>SpriteFrame.hpp</label>
        <link refid="dd/df2/_sprite_frame_8hpp_source"/>
        <childnode refid="2674" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2680" relation="include">
        </childnode>
        <childnode refid="2687" relation="include">
        </childnode>
        <childnode refid="2688" relation="include">
        </childnode>
        <childnode refid="2692" relation="include">
        </childnode>
        <childnode refid="2693" relation="include">
        </childnode>
        <childnode refid="2694" relation="include">
        </childnode>
        <childnode refid="2695" relation="include">
        </childnode>
      </node>
      <node id="2730">
        <label>audio/AudioDevice.hpp</label>
        <link refid="de/d74/_audio_device_8hpp_source"/>
        <childnode refid="2714" relation="include">
        </childnode>
        <childnode refid="2713" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2676" relation="include">
        </childnode>
        <childnode refid="2722" relation="include">
        </childnode>
      </node>
      <node id="2685">
        <label>cmath</label>
      </node>
      <node id="2671">
        <label>ouzel/core/Cache.cpp</label>
        <link refid="d4/de2/_cache_8cpp"/>
        <childnode refid="2672" relation="include">
        </childnode>
        <childnode refid="2702" relation="include">
        </childnode>
        <childnode refid="2712" relation="include">
        </childnode>
        <childnode refid="2741" relation="include">
        </childnode>
        <childnode refid="2743" relation="include">
        </childnode>
        <childnode refid="2697" relation="include">
        </childnode>
        <childnode refid="2679" relation="include">
        </childnode>
        <childnode refid="2724" relation="include">
        </childnode>
        <childnode refid="2744" relation="include">
        </childnode>
        <childnode refid="2745" relation="include">
        </childnode>
        <childnode refid="2746" relation="include">
        </childnode>
        <childnode refid="2747" relation="include">
        </childnode>
      </node>
      <node id="2739">
        <label>errno.h</label>
      </node>
      <node id="2743">
        <label>graphics/ShaderResource.hpp</label>
        <link refid="d5/da1/_shader_resource_8hpp_source"/>
        <childnode refid="2681" relation="include">
        </childnode>
        <childnode refid="2674" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2742" relation="include">
        </childnode>
        <childnode refid="2700" relation="include">
        </childnode>
        <childnode refid="2690" relation="include">
        </childnode>
        <childnode refid="2721" relation="include">
        </childnode>
        <childnode refid="2716" relation="include">
        </childnode>
      </node>
      <node id="2702">
        <label>Engine.hpp</label>
        <link refid="db/db9/_engine_8hpp_source"/>
        <childnode refid="2673" relation="include">
        </childnode>
        <childnode refid="2703" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2704" relation="include">
        </childnode>
        <childnode refid="2705" relation="include">
        </childnode>
        <childnode refid="2706" relation="include">
        </childnode>
        <childnode refid="2707" relation="include">
        </childnode>
        <childnode refid="2708" relation="include">
        </childnode>
        <childnode refid="2676" relation="include">
        </childnode>
        <childnode refid="2710" relation="include">
        </childnode>
        <childnode refid="2711" relation="include">
        </childnode>
        <childnode refid="2712" relation="include">
        </childnode>
        <childnode refid="2722" relation="include">
        </childnode>
        <childnode refid="2724" relation="include">
        </childnode>
        <childnode refid="2725" relation="include">
        </childnode>
        <childnode refid="2736" relation="include">
        </childnode>
        <childnode refid="2672" relation="include">
        </childnode>
        <childnode refid="2737" relation="include">
        </childnode>
        <childnode refid="2738" relation="include">
        </childnode>
        <childnode refid="2740" relation="include">
        </childnode>
      </node>
      <node id="2737">
        <label>localization/Localization.hpp</label>
        <link refid="d0/dff/_localization_8hpp_source"/>
        <childnode refid="2673" relation="include">
        </childnode>
        <childnode refid="2675" relation="include">
        </childnode>
        <childnode refid="2674" relation="include">
        </childnode>
      </node>
      <node id="2677">
        <label>scene/SpriteDefinition.hpp</label>
        <link refid="dd/dbf/_sprite_definition_8hpp_source"/>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2679" relation="include">
        </childnode>
      </node>
      <node id="2674">
        <label>string</label>
      </node>
      <node id="2744">
        <label>audio/SoundDataWave.hpp</label>
        <link refid="d1/d99/_sound_data_wave_8hpp_source"/>
        <childnode refid="2681" relation="include">
        </childnode>
        <childnode refid="2674" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2701" relation="include">
        </childnode>
      </node>
      <node id="2726">
        <label>events/Event.hpp</label>
        <link refid="d6/dc3/_event_8hpp_source"/>
        <childnode refid="2681" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2674" relation="include">
        </childnode>
        <childnode refid="2727" relation="include">
        </childnode>
        <childnode refid="2732" relation="include">
        </childnode>
        <childnode refid="2683" relation="include">
        </childnode>
        <childnode refid="2686" relation="include">
        </childnode>
        <childnode refid="2734" relation="include">
        </childnode>
      </node>
      <node id="2675">
        <label>map</label>
      </node>
      <node id="2728">
        <label>cfloat</label>
      </node>
      <node id="2718">
        <label>math/Box3.hpp</label>
        <link refid="de/d0f/_box3_8hpp_source"/>
        <childnode refid="2681" relation="include">
        </childnode>
        <childnode refid="2682" relation="include">
        </childnode>
        <childnode refid="2690" relation="include">
        </childnode>
        <childnode refid="2719" relation="include">
        </childnode>
      </node>
      <node id="2736">
        <label>scene/SceneManager.hpp</label>
        <link refid="db/d89/_scene_manager_8hpp_source"/>
        <childnode refid="2673" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2676" relation="include">
        </childnode>
      </node>
      <node id="2709">
        <label>Config.h</label>
      </node>
      <node id="2716">
        <label>math/Matrix4.hpp</label>
        <link refid="d4/d5c/_matrix4_8hpp_source"/>
        <childnode refid="2708" relation="include">
        </childnode>
        <childnode refid="2717" relation="include">
        </childnode>
        <childnode refid="2720" relation="include">
        </childnode>
        <childnode refid="2690" relation="include">
        </childnode>
        <childnode refid="2721" relation="include">
        </childnode>
      </node>
      <node id="2680">
        <label>math/Box2.hpp</label>
        <link refid="d8/d32/_box2_8hpp_source"/>
        <childnode refid="2681" relation="include">
        </childnode>
        <childnode refid="2682" relation="include">
        </childnode>
        <childnode refid="2683" relation="include">
        </childnode>
        <childnode refid="2686" relation="include">
        </childnode>
      </node>
      <node id="2729">
        <label>audio/SoundInput.hpp</label>
        <link refid="dd/d1a/_sound_input_8hpp_source"/>
        <childnode refid="2730" relation="include">
        </childnode>
      </node>
      <node id="2727">
        <label>audio/Sound.hpp</label>
        <link refid="d8/da4/_sound_8hpp_source"/>
        <childnode refid="2728" relation="include">
        </childnode>
        <childnode refid="2673" relation="include">
        </childnode>
        <childnode refid="2729" relation="include">
        </childnode>
        <childnode refid="2731" relation="include">
        </childnode>
        <childnode refid="2710" relation="include">
        </childnode>
        <childnode refid="2690" relation="include">
        </childnode>
      </node>
      <node id="2741">
        <label>graphics/TextureResource.hpp</label>
        <link refid="dd/d41/_texture_resource_8hpp_source"/>
        <childnode refid="2681" relation="include">
        </childnode>
        <childnode refid="2674" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2742" relation="include">
        </childnode>
        <childnode refid="2695" relation="include">
        </childnode>
        <childnode refid="2691" relation="include">
        </childnode>
        <childnode refid="2686" relation="include">
        </childnode>
      </node>
      <node id="2696">
        <label>graphics/PixelFormat.hpp</label>
        <link refid="d9/d2a/_pixel_format_8hpp_source"/>
      </node>
      <node id="2732">
        <label>scene/Actor.hpp</label>
        <link refid="d2/d39/_actor_8hpp_source"/>
        <childnode refid="2673" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2733" relation="include">
        </childnode>
        <childnode refid="2710" relation="include">
        </childnode>
        <childnode refid="2718" relation="include">
        </childnode>
        <childnode refid="2691" relation="include">
        </childnode>
        <childnode refid="2716" relation="include">
        </childnode>
        <childnode refid="2723" relation="include">
        </childnode>
        <childnode refid="2683" relation="include">
        </childnode>
        <childnode refid="2690" relation="include">
        </childnode>
      </node>
      <node id="2720">
        <label>math/Plane.hpp</label>
        <link refid="d1/df4/_plane_8hpp_source"/>
      </node>
      <node id="2715">
        <label>condition_variable</label>
      </node>
      <node id="2733">
        <label>scene/ActorContainer.hpp</label>
        <link refid="d6/dbe/_actor_container_8hpp_source"/>
        <childnode refid="2673" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2676" relation="include">
        </childnode>
        <childnode refid="2683" relation="include">
        </childnode>
      </node>
      <node id="2735">
        <label>events/EventHandler.hpp</label>
        <link refid="d4/d86/_event_handler_8hpp_source"/>
        <childnode refid="2704" relation="include">
        </childnode>
        <childnode refid="2681" relation="include">
        </childnode>
        <childnode refid="2726" relation="include">
        </childnode>
      </node>
      <node id="2693">
        <label>graphics/Buffer.hpp</label>
        <link refid="dd/df1/_buffer_8hpp_source"/>
        <childnode refid="2681" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2676" relation="include">
        </childnode>
      </node>
      <node id="2695">
        <label>graphics/Texture.hpp</label>
        <link refid="d2/d4b/_texture_8hpp_source"/>
        <childnode refid="2681" relation="include">
        </childnode>
        <childnode refid="2674" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2676" relation="include">
        </childnode>
        <childnode refid="2696" relation="include">
        </childnode>
        <childnode refid="2691" relation="include">
        </childnode>
        <childnode refid="2686" relation="include">
        </childnode>
      </node>
      <node id="2708">
        <label>Setup.h</label>
        <link refid="de/d93/_setup_8h_source"/>
        <childnode refid="2709" relation="include">
        </childnode>
      </node>
      <node id="2692">
        <label>graphics/BlendState.hpp</label>
        <link refid="d2/d0f/_blend_state_8hpp_source"/>
        <childnode refid="2681" relation="include">
        </childnode>
        <childnode refid="2676" relation="include">
        </childnode>
      </node>
      <node id="2678">
        <label>vector</label>
      </node>
      <node id="2686">
        <label>math/Size2.hpp</label>
        <link refid="db/d59/_size2_8hpp_source"/>
        <childnode refid="2683" relation="include">
        </childnode>
      </node>
      <node id="2717">
        <label>math/ConvexVolume.hpp</label>
        <link refid="d8/d7f/_convex_volume_8hpp_source"/>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2718" relation="include">
        </childnode>
        <childnode refid="2720" relation="include">
        </childnode>
        <childnode refid="2721" relation="include">
        </childnode>
      </node>
      <node id="2747">
        <label>gui/TTFont.hpp</label>
        <link refid="db/d7c/_t_t_font_8hpp_source"/>
        <childnode refid="2698" relation="include">
        </childnode>
      </node>
      <node id="2740">
        <label>utils/INI.hpp</label>
        <link refid="dc/d52/_i_n_i_8hpp_source"/>
        <childnode refid="2681" relation="include">
        </childnode>
        <childnode refid="2675" relation="include">
        </childnode>
        <childnode refid="2674" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
      </node>
      <node id="2719">
        <label>math/Size3.hpp</label>
        <link refid="de/da6/_size3_8hpp_source"/>
        <childnode refid="2690" relation="include">
        </childnode>
      </node>
      <node id="2734">
        <label>input/Input.hpp</label>
        <link refid="d0/d4b/_input_8hpp_source"/>
        <childnode refid="2673" relation="include">
        </childnode>
        <childnode refid="2714" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2699" relation="include">
        </childnode>
        <childnode refid="2676" relation="include">
        </childnode>
        <childnode refid="2683" relation="include">
        </childnode>
      </node>
      <node id="2688">
        <label>graphics/Vertex.hpp</label>
        <link refid="df/da9/_vertex_8hpp_source"/>
        <childnode refid="2674" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2689" relation="include">
        </childnode>
        <childnode refid="2683" relation="include">
        </childnode>
        <childnode refid="2690" relation="include">
        </childnode>
        <childnode refid="2691" relation="include">
        </childnode>
      </node>
      <node id="2722">
        <label>audio/Audio.hpp</label>
        <link refid="d4/d43/_audio_8hpp_source"/>
        <childnode refid="2681" relation="include">
        </childnode>
        <childnode refid="2704" relation="include">
        </childnode>
        <childnode refid="2673" relation="include">
        </childnode>
        <childnode refid="2703" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2676" relation="include">
        </childnode>
        <childnode refid="2723" relation="include">
        </childnode>
        <childnode refid="2690" relation="include">
        </childnode>
      </node>
      <node id="2691">
        <label>math/Color.hpp</label>
        <link refid="d3/d06/_color_8hpp_source"/>
        <childnode refid="2684" relation="include">
        </childnode>
        <childnode refid="2681" relation="include">
        </childnode>
        <childnode refid="2674" relation="include">
        </childnode>
      </node>
      <node id="2701">
        <label>audio/SoundData.hpp</label>
        <link refid="df/d3b/_sound_data_8hpp_source"/>
        <childnode refid="2681" relation="include">
        </childnode>
        <childnode refid="2673" relation="include">
        </childnode>
        <childnode refid="2674" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2676" relation="include">
        </childnode>
      </node>
      <node id="2712">
        <label>graphics/Renderer.hpp</label>
        <link refid="dc/d94/_renderer_8hpp_source"/>
        <childnode refid="2681" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2674" relation="include">
        </childnode>
        <childnode refid="2713" relation="include">
        </childnode>
        <childnode refid="2703" relation="include">
        </childnode>
        <childnode refid="2673" relation="include">
        </childnode>
        <childnode refid="2714" relation="include">
        </childnode>
        <childnode refid="2706" relation="include">
        </childnode>
        <childnode refid="2715" relation="include">
        </childnode>
        <childnode refid="2676" relation="include">
        </childnode>
        <childnode refid="2687" relation="include">
        </childnode>
        <childnode refid="2716" relation="include">
        </childnode>
        <childnode refid="2686" relation="include">
        </childnode>
        <childnode refid="2691" relation="include">
        </childnode>
        <childnode refid="2695" relation="include">
        </childnode>
      </node>
      <node id="2684">
        <label>cstddef</label>
      </node>
      <node id="2699">
        <label>unordered_map</label>
      </node>
      <node id="2694">
        <label>graphics/MeshBuffer.hpp</label>
        <link refid="d6/d47/_mesh_buffer_8hpp_source"/>
        <childnode refid="2673" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2676" relation="include">
        </childnode>
        <childnode refid="2688" relation="include">
        </childnode>
      </node>
      <node id="2721">
        <label>math/Vector4.hpp</label>
        <link refid="dd/d49/_vector4_8hpp_source"/>
        <childnode refid="2684" relation="include">
        </childnode>
        <childnode refid="2708" relation="include">
        </childnode>
      </node>
      <node id="2714">
        <label>mutex</label>
      </node>
      <node id="2707">
        <label>chrono</label>
      </node>
      <node id="2705">
        <label>thread</label>
      </node>
      <node id="2745">
        <label>audio/SoundDataVorbis.hpp</label>
        <link refid="d2/d1a/_sound_data_vorbis_8hpp_source"/>
        <childnode refid="2681" relation="include">
        </childnode>
        <childnode refid="2674" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2701" relation="include">
        </childnode>
      </node>
      <node id="2703">
        <label>set</label>
      </node>
      <node id="2698">
        <label>gui/Font.hpp</label>
        <link refid="d9/da6/_font_8hpp_source"/>
        <childnode refid="2681" relation="include">
        </childnode>
        <childnode refid="2674" relation="include">
        </childnode>
        <childnode refid="2675" relation="include">
        </childnode>
        <childnode refid="2673" relation="include">
        </childnode>
        <childnode refid="2699" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2676" relation="include">
        </childnode>
        <childnode refid="2691" relation="include">
        </childnode>
        <childnode refid="2695" relation="include">
        </childnode>
        <childnode refid="2688" relation="include">
        </childnode>
      </node>
      <node id="2683">
        <label>math/Vector2.hpp</label>
        <link refid="d3/d12/_vector2_8hpp_source"/>
        <childnode refid="2684" relation="include">
        </childnode>
        <childnode refid="2685" relation="include">
        </childnode>
      </node>
      <node id="2746">
        <label>gui/BMFont.hpp</label>
        <link refid="d9/d5d/_b_m_font_8hpp_source"/>
        <childnode refid="2698" relation="include">
        </childnode>
      </node>
      <node id="2710">
        <label>core/UpdateCallback.hpp</label>
        <link refid="d0/d75/_update_callback_8hpp_source"/>
        <childnode refid="2704" relation="include">
        </childnode>
        <childnode refid="2681" relation="include">
        </childnode>
      </node>
      <node id="2700">
        <label>graphics/Shader.hpp</label>
        <link refid="d2/d73/_shader_8hpp_source"/>
        <childnode refid="2681" relation="include">
        </childnode>
        <childnode refid="2674" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2676" relation="include">
        </childnode>
        <childnode refid="2689" relation="include">
        </childnode>
        <childnode refid="2688" relation="include">
        </childnode>
      </node>
      <node id="2676">
        <label>utils/Noncopyable.hpp</label>
        <link refid="db/df1/_noncopyable_8hpp_source"/>
      </node>
      <node id="2687">
        <label>math/Rectangle.hpp</label>
        <link refid="d4/d32/_rectangle_8hpp_source"/>
        <childnode refid="2683" relation="include">
        </childnode>
        <childnode refid="2686" relation="include">
        </childnode>
      </node>
      <node id="2690">
        <label>math/Vector3.hpp</label>
        <link refid="d2/d6a/_vector3_8hpp_source"/>
        <childnode refid="2684" relation="include">
        </childnode>
      </node>
      <node id="2742">
        <label>graphics/Resource.hpp</label>
        <link refid="d1/d9d/_resource_8hpp_source"/>
        <childnode refid="2676" relation="include">
        </childnode>
      </node>
      <node id="2673">
        <label>memory</label>
      </node>
      <node id="2672">
        <label>Cache.hpp</label>
        <link refid="d6/d4c/_cache_8hpp_source"/>
        <childnode refid="2673" relation="include">
        </childnode>
        <childnode refid="2674" relation="include">
        </childnode>
        <childnode refid="2675" relation="include">
        </childnode>
        <childnode refid="2676" relation="include">
        </childnode>
        <childnode refid="2677" relation="include">
        </childnode>
        <childnode refid="2697" relation="include">
        </childnode>
        <childnode refid="2698" relation="include">
        </childnode>
        <childnode refid="2692" relation="include">
        </childnode>
        <childnode refid="2700" relation="include">
        </childnode>
        <childnode refid="2695" relation="include">
        </childnode>
        <childnode refid="2701" relation="include">
        </childnode>
      </node>
      <node id="2738">
        <label>network/Network.hpp</label>
        <link refid="dc/dd6/_network_8hpp_source"/>
        <childnode refid="2739" relation="include">
        </childnode>
        <childnode refid="2681" relation="include">
        </childnode>
        <childnode refid="2674" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="d6/d09/namespaceouzel">ouzel</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2017<sp/>Elviss<sp/>Strazdins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Ouzel<sp/>engine.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Cache.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Engine.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;graphics/Renderer.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;graphics/TextureResource.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;graphics/ShaderResource.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;scene/ParticleDefinition.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;scene/SpriteFrame.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;files/FileSystem.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;audio/SoundDataWave.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;audio/SoundDataVorbis.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gui/BMFont.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gui/TTFont.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d6/d09/namespaceouzel" kindref="compound">ouzel</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>Cache::Cache()</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Cache::clear()</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>releaseTextures();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>releaseShaders();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>releaseParticleDefinitions();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>releaseBlendStates();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>releaseSpriteDefinitions();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>releaseFonts();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Cache::preloadTexture(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dynamic,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mipmaps)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;graphics::Texture&gt;<sp/>texture<sp/>=<sp/>std::make_shared&lt;graphics::Texture&gt;();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>texture-&gt;init(filename,<sp/>dynamic<sp/>?<sp/>graphics::Texture::DYNAMIC<sp/>:<sp/>0,<sp/>mipmaps<sp/>?<sp/>0<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textures[filename]<sp/>=<sp/>texture;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;graphics::Texture&gt;&amp;<sp/>Cache::getTexture(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dynamic,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mipmaps)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="42"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>textures.find(filename);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>textures.end())</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i-&gt;second;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;graphics::Texture&gt;<sp/>result<sp/>=<sp/>std::make_shared&lt;graphics::Texture&gt;();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;init(filename,<sp/>dynamic<sp/>?<sp/>graphics::Texture::DYNAMIC<sp/>:<sp/>0,<sp/>mipmaps<sp/>?<sp/>0<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>textures.insert(std::make_pair(filename,<sp/>result)).first;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i-&gt;second;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Cache::setTexture(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;graphics::Texture&gt;&amp;<sp/>texture)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textures[filename]<sp/>=<sp/>texture;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Cache::releaseTextures()</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>textures.begin();<sp/>i<sp/>!=<sp/>textures.end();)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>delete<sp/>white<sp/>pixel<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i-&gt;first<sp/>==<sp/>graphics::TEXTURE_WHITE_PIXEL)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>textures.erase(i);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;graphics::Shader&gt;&amp;<sp/>Cache::getShader(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>shaderName)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="82"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>shaders.find(shaderName);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>shaders.end())</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i-&gt;second;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>shaders.insert(std::make_pair(shaderName,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)).first;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i-&gt;second;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Cache::setShader(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>shaderName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;graphics::Shader&gt;&amp;<sp/>shader)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shaders[shaderName]<sp/>=<sp/>shader;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Cache::releaseShaders()</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>shaders.begin();<sp/>i<sp/>!=<sp/>shaders.end();)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>delete<sp/>default<sp/>shaders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i-&gt;first<sp/>==<sp/>graphics::SHADER_COLOR<sp/>||</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;first<sp/>==<sp/>graphics::SHADER_TEXTURE)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>shaders.erase(i);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;graphics::BlendState&gt;&amp;<sp/>Cache::getBlendState(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>blendStateName)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="120"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>blendStates.find(blendStateName);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>blendStates.end())</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i-&gt;second;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>blendStates.insert(std::make_pair(blendStateName,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)).first;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i-&gt;second;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Cache::setBlendState(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>blendStateName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;graphics::BlendState&gt;&amp;<sp/>blendState)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blendStates[blendStateName]<sp/>=<sp/>blendState;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Cache::releaseBlendStates()</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>blendStates.begin();<sp/>i<sp/>!=<sp/>blendStates.end();)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>delete<sp/>default<sp/>blend<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i-&gt;first<sp/>==<sp/>graphics::BLEND_NO_BLEND<sp/>||</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;first<sp/>==<sp/>graphics::BLEND_ADD<sp/>||</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;first<sp/>==<sp/>graphics::BLEND_MULTIPLY<sp/>||</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;first<sp/>==<sp/>graphics::BLEND_ALPHA)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>blendStates.erase(i);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Cache::preloadSpriteDefinition(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mipmaps,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>spritesX,<sp/>uint32_t<sp/>spritesY,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector2&amp;<sp/>pivot)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>extension<sp/>=<sp/>sharedEngine-&gt;getFileSystem()-&gt;getExtensionPart(filename);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scene::SpriteDefinition<sp/>spriteDefinition;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extension<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;json&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spriteDefinition<sp/>=<sp/>scene::SpriteDefinition::loadSpriteDefinition(filename,<sp/>mipmaps);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spriteDefinition.texture<sp/>=<sp/>sharedEngine-&gt;getCache()-&gt;getTexture(filename,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>mipmaps);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spriteDefinition.texture)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Size2<sp/>spriteSize<sp/>=<sp/>Size2(spriteDefinition.texture-&gt;getSize().width<sp/>/<sp/>spritesX,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spriteDefinition.texture-&gt;getSize().height<sp/>/<sp/>spritesY);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>spritesX;<sp/>++x)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>spritesY;<sp/>++y)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rectangle<sp/>rectangle(spriteSize.width<sp/>*<sp/>x,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spriteSize.height<sp/>*<sp/>y,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spriteSize.width,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spriteSize.height);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scene::SpriteFrame<sp/>frame<sp/>=<sp/>scene::SpriteFrame(spriteDefinition.texture-&gt;getSize(),<sp/>rectangle,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>spriteSize,<sp/>Vector2(),<sp/>pivot);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spriteDefinition.frames.push_back(frame);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spriteDefinitions[filename]<sp/>=<sp/>spriteDefinition;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>scene::SpriteDefinition&amp;<sp/>Cache::getSpriteDefinition(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mipmaps,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>spritesX,<sp/>uint32_t<sp/>spritesY,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector2&amp;<sp/>pivot)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="202"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>spriteDefinitions.find(filename);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>spriteDefinitions.end())</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i-&gt;second;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>extension<sp/>=<sp/>sharedEngine-&gt;getFileSystem()-&gt;getExtensionPart(filename);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scene::SpriteDefinition<sp/>spriteDefinition;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extension<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;json&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spriteDefinition<sp/>=<sp/>scene::SpriteDefinition::loadSpriteDefinition(filename,<sp/>mipmaps);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spritesX<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>spritesY<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spriteDefinition.texture<sp/>=<sp/>sharedEngine-&gt;getCache()-&gt;getTexture(filename,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>mipmaps);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spriteDefinition.texture)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Size2<sp/>spriteSize<sp/>=<sp/>Size2(spriteDefinition.texture-&gt;getSize().width<sp/>/<sp/>spritesX,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spriteDefinition.texture-&gt;getSize().height<sp/>/<sp/>spritesY);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>spritesX;<sp/>++x)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>spritesY;<sp/>++y)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rectangle<sp/>rectangle(spriteSize.width<sp/>*<sp/>x,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spriteSize.height<sp/>*<sp/>y,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spriteSize.width,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spriteSize.height);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scene::SpriteFrame<sp/>frame<sp/>=<sp/>scene::SpriteFrame(spriteDefinition.texture-&gt;getSize(),<sp/>rectangle,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>spriteSize,<sp/>Vector2(),<sp/>pivot);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spriteDefinition.frames.push_back(frame);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>spriteDefinitions.insert(std::make_pair(filename,<sp/>spriteDefinition)).first;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i-&gt;second;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Cache::setSpriteDefinition(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>scene::SpriteDefinition&amp;<sp/>spriteDefinition)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spriteDefinitions[filename]<sp/>=<sp/>spriteDefinition;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Cache::releaseSpriteDefinitions()</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spriteDefinitions.clear();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Cache::preloadParticleDefinition(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>particleDefinitions[filename]<sp/>=<sp/>scene::ParticleDefinition::loadParticleDefinition(filename);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>scene::ParticleDefinition&amp;<sp/>Cache::getParticleDefinition(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="266"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>particleDefinitions.find(filename);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>particleDefinitions.end())</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i-&gt;second;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>particleDefinitions.insert(std::make_pair(filename,<sp/>scene::ParticleDefinition::loadParticleDefinition(filename))).first;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i-&gt;second;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Cache::setParticleDefinition(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>scene::ParticleDefinition&amp;<sp/>particleDefinition)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>particleDefinitions[filename]<sp/>=<sp/>particleDefinition;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Cache::releaseParticleDefinitions()</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>particleDefinitions.clear();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Cache::preloadFont(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fontSize,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mipmaps)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>fonts.find(filename);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>fonts.end())</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>extension<sp/>=<sp/>sharedEngine-&gt;getFileSystem()-&gt;getExtensionPart(filename);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extension<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;fnt&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fonts[filename]<sp/>=<sp/>std::make_shared&lt;BMFont&gt;(filename,<sp/>mipmaps);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extension<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;ttf&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fonts[filename]<sp/>=<sp/>std::make_shared&lt;TTFont&gt;(filename,<sp/>fontSize,<sp/>mipmaps);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Font&gt;&amp;<sp/>Cache::getFont(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fontSize,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mipmaps)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="311"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>fonts.find(filename);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>fonts.end())</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i-&gt;second;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>extension<sp/>=<sp/>sharedEngine-&gt;getFileSystem()-&gt;getExtensionPart(filename);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Font&gt;<sp/>font;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extension<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;fnt&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font<sp/>=<sp/>std::make_shared&lt;BMFont&gt;(filename,<sp/>mipmaps);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extension<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;ttf&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font<sp/>=<sp/>std::make_shared&lt;TTFont&gt;(filename,<sp/>fontSize,<sp/>mipmaps);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>fonts.insert(std::make_pair(filename,<sp/>font)).first;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i-&gt;second;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Cache::setFont(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Font&gt;&amp;<sp/>font)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fonts[filename]<sp/>=<sp/>font;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Cache::releaseFonts()</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fonts.clear();</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Cache::preloadSoundData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>extension<sp/>=<sp/>FileSystem::getExtensionPart(filename);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extension<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;wav&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;audio::SoundDataWave&gt;<sp/>newSoundData<sp/>=<sp/>std::make_shared&lt;audio::SoundDataWave&gt;();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSoundData-&gt;init(filename);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>soundData[filename]<sp/>=<sp/>newSoundData;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extension<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;ogg&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;audio::SoundDataVorbis&gt;<sp/>newSoundData<sp/>=<sp/>std::make_shared&lt;audio::SoundDataVorbis&gt;();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSoundData-&gt;init(filename);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>soundData[filename]<sp/>=<sp/>newSoundData;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;audio::SoundData&gt;&amp;<sp/>Cache::getSoundData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="368"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>soundData.find(filename);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>soundData.end())</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i-&gt;second;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;audio::SoundData&gt;<sp/>newSoundData;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>extension<sp/>=<sp/>FileSystem::getExtensionPart(filename);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extension<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;wav&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSoundData<sp/>=<sp/>std::make_shared&lt;audio::SoundDataWave&gt;();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSoundData-&gt;init(filename);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>soundData[filename]<sp/>=<sp/>newSoundData;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extension<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;ogg&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSoundData<sp/>=<sp/>std::make_shared&lt;audio::SoundDataVorbis&gt;();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSoundData-&gt;init(filename);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>soundData[filename]<sp/>=<sp/>newSoundData;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>soundData.insert(std::make_pair(filename,<sp/>newSoundData)).first;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i-&gt;second;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Cache::setSoundData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;audio::SoundData&gt;&amp;<sp/>newSoundData)</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>soundData[filename]<sp/>=<sp/>newSoundData;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Cache::releaseSoundData()</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>soundData.clear();</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="ouzel/core/Cache.cpp"/>
  </compounddef>
</doxygen>
