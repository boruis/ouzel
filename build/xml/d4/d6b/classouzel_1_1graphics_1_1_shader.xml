<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="d4/d6b/classouzel_1_1graphics_1_1_shader" kind="class" language="C++" prot="public">
    <compoundname>ouzel::graphics::Shader</compoundname>
    <basecompoundref refid="d2/d21/classouzel_1_1_noncopyable" prot="public" virt="non-virtual">ouzel::Noncopyable</basecompoundref>
    <innerclass refid="d4/de8/structouzel_1_1graphics_1_1_shader_1_1_constant_info" prot="public">ouzel::graphics::Shader::ConstantInfo</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d4/d6b/classouzel_1_1graphics_1_1_shader_1a1e8eb187c52b2d7348eb3507307ecfac" prot="private" static="no" mutable="no">
        <type><ref refid="d3/d8b/classouzel_1_1graphics_1_1_shader_resource" kindref="compound">ShaderResource</ref> *</type>
        <definition>ShaderResource* ouzel::graphics::Shader::resource</definition>
        <argsstring></argsstring>
        <name>resource</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/graphics/Shader.hpp" line="59" column="1" bodyfile="ouzel/graphics/Shader.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d6b/classouzel_1_1graphics_1_1_shader_1aa60f586f5c773797622c2a2a9b0add84" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="df/d3a/structouzel_1_1graphics_1_1_vertex_attribute" kindref="compound">VertexAttribute</ref> &gt;</type>
        <definition>std::vector&lt;VertexAttribute&gt; ouzel::graphics::Shader::vertexAttributes</definition>
        <argsstring></argsstring>
        <name>vertexAttributes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/graphics/Shader.hpp" line="61" column="1" bodyfile="ouzel/graphics/Shader.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d6b/classouzel_1_1graphics_1_1_shader_1aa344c189885cc30dfe8183ae4817bbb3" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string ouzel::graphics::Shader::pixelShaderFilename</definition>
        <argsstring></argsstring>
        <name>pixelShaderFilename</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/graphics/Shader.hpp" line="63" column="1" bodyfile="ouzel/graphics/Shader.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d6b/classouzel_1_1graphics_1_1_shader_1aad6991e4f55856f4419f220111f789b0" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string ouzel::graphics::Shader::vertexShaderFilename</definition>
        <argsstring></argsstring>
        <name>vertexShaderFilename</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/graphics/Shader.hpp" line="64" column="1" bodyfile="ouzel/graphics/Shader.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d4/d6b/classouzel_1_1graphics_1_1_shader_1a06e574c5e1cb83349d779a7879d47752" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ouzel::graphics::Shader::Shader</definition>
        <argsstring>()</argsstring>
        <name>Shader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/graphics/Shader.hpp" line="32" column="1" bodyfile="ouzel/graphics/Shader.cpp" bodystart="15" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="d4/d6b/classouzel_1_1graphics_1_1_shader_1af112b25bc5273ee41c850fd23a92ec37" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>ouzel::graphics::Shader::~Shader</definition>
        <argsstring>()</argsstring>
        <name>~Shader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/graphics/Shader.hpp" line="33" column="1" bodyfile="ouzel/graphics/Shader.cpp" bodystart="20" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="d4/d6b/classouzel_1_1graphics_1_1_shader_1ad779a75e4312593c0a2d59265879583f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ouzel::graphics::Shader::init</definition>
        <argsstring>(const std::vector&lt; uint8_t &gt; &amp;newPixelShader, const std::vector&lt; uint8_t &gt; &amp;newVertexShader, const std::vector&lt; VertexAttribute &gt; &amp;newVertexAttributes, const std::vector&lt; ConstantInfo &gt; &amp;newPixelShaderConstantInfo, const std::vector&lt; ConstantInfo &gt; &amp;newVertexShaderConstantInfo, uint32_t newPixelShaderDataAlignment=0, uint32_t newVertexShaderDataAlignment=0, const std::string &amp;pixelShaderFunction=&quot;&quot;, const std::string &amp;vertexShaderFunction=&quot;&quot;)</argsstring>
        <name>init</name>
        <param>
          <type>const std::vector&lt; uint8_t &gt; &amp;</type>
          <declname>newPixelShader</declname>
        </param>
        <param>
          <type>const std::vector&lt; uint8_t &gt; &amp;</type>
          <declname>newVertexShader</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="df/d3a/structouzel_1_1graphics_1_1_vertex_attribute" kindref="compound">VertexAttribute</ref> &gt; &amp;</type>
          <declname>newVertexAttributes</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="d4/de8/structouzel_1_1graphics_1_1_shader_1_1_constant_info" kindref="compound">ConstantInfo</ref> &gt; &amp;</type>
          <declname>newPixelShaderConstantInfo</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="d4/de8/structouzel_1_1graphics_1_1_shader_1_1_constant_info" kindref="compound">ConstantInfo</ref> &gt; &amp;</type>
          <declname>newVertexShaderConstantInfo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>newPixelShaderDataAlignment</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>newVertexShaderDataAlignment</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>pixelShaderFunction</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>vertexShaderFunction</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/graphics/Shader.hpp" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/d6b/classouzel_1_1graphics_1_1_shader_1ac61350c669fe1ed9e1d9632a47244a72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ouzel::graphics::Shader::init</definition>
        <argsstring>(const std::string &amp;newPixelShader, const std::string &amp;newVertexShader, const std::vector&lt; VertexAttribute &gt; &amp;newVertexAttributes, const std::vector&lt; ConstantInfo &gt; &amp;newPixelShaderConstantInfo, const std::vector&lt; ConstantInfo &gt; &amp;newVertexShaderConstantInfo, uint32_t newPixelShaderDataAlignment=0, uint32_t newVertexShaderDataAlignment=0, const std::string &amp;newPixelShaderFunction=&quot;&quot;, const std::string &amp;newVertexShaderFunction=&quot;&quot;)</argsstring>
        <name>init</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>newPixelShader</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>newVertexShader</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="df/d3a/structouzel_1_1graphics_1_1_vertex_attribute" kindref="compound">VertexAttribute</ref> &gt; &amp;</type>
          <declname>newVertexAttributes</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="d4/de8/structouzel_1_1graphics_1_1_shader_1_1_constant_info" kindref="compound">ConstantInfo</ref> &gt; &amp;</type>
          <declname>newPixelShaderConstantInfo</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="d4/de8/structouzel_1_1graphics_1_1_shader_1_1_constant_info" kindref="compound">ConstantInfo</ref> &gt; &amp;</type>
          <declname>newVertexShaderConstantInfo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>newPixelShaderDataAlignment</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>newVertexShaderDataAlignment</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>newPixelShaderFunction</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>newVertexShaderFunction</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/graphics/Shader.hpp" line="44" column="1" bodyfile="ouzel/graphics/Shader.cpp" bodystart="25" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="d4/d6b/classouzel_1_1graphics_1_1_shader_1ae086f1c93518a1a48abf475d88853301" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d3/d8b/classouzel_1_1graphics_1_1_shader_resource" kindref="compound">ShaderResource</ref> *</type>
        <definition>ShaderResource* ouzel::graphics::Shader::getResource</definition>
        <argsstring>() const</argsstring>
        <name>getResource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/graphics/Shader.hpp" line="54" column="1" bodyfile="ouzel/graphics/Shader.hpp" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="d4/d6b/classouzel_1_1graphics_1_1_shader_1aca67bc90dc5b9baa1aa99a851dab0da1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="df/d3a/structouzel_1_1graphics_1_1_vertex_attribute" kindref="compound">VertexAttribute</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; VertexAttribute &gt; &amp; ouzel::graphics::Shader::getVertexAttributes</definition>
        <argsstring>() const</argsstring>
        <name>getVertexAttributes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ouzel/graphics/Shader.hpp" line="56" column="1" bodyfile="ouzel/graphics/Shader.cpp" bodystart="98" bodyend="101"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1580">
        <label>ouzel::graphics::Shader</label>
        <link refid="d4/d6b/classouzel_1_1graphics_1_1_shader"/>
        <childnode refid="1581" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1581">
        <label>ouzel::Noncopyable</label>
        <link refid="d2/d21/classouzel_1_1_noncopyable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1582">
        <label>ouzel::graphics::Shader</label>
        <link refid="d4/d6b/classouzel_1_1graphics_1_1_shader"/>
        <childnode refid="1583" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1583">
        <label>ouzel::Noncopyable</label>
        <link refid="d2/d21/classouzel_1_1_noncopyable"/>
      </node>
    </collaborationgraph>
    <location file="ouzel/graphics/Shader.hpp" line="20" column="1" bodyfile="ouzel/graphics/Shader.hpp" bodystart="19" bodyend="65"/>
    <listofallmembers>
      <member refid="d4/d6b/classouzel_1_1graphics_1_1_shader_1ae086f1c93518a1a48abf475d88853301" prot="public" virt="non-virtual"><scope>ouzel::graphics::Shader</scope><name>getResource</name></member>
      <member refid="d4/d6b/classouzel_1_1graphics_1_1_shader_1aca67bc90dc5b9baa1aa99a851dab0da1" prot="public" virt="non-virtual"><scope>ouzel::graphics::Shader</scope><name>getVertexAttributes</name></member>
      <member refid="d4/d6b/classouzel_1_1graphics_1_1_shader_1ad779a75e4312593c0a2d59265879583f" prot="public" virt="non-virtual"><scope>ouzel::graphics::Shader</scope><name>init</name></member>
      <member refid="d4/d6b/classouzel_1_1graphics_1_1_shader_1ac61350c669fe1ed9e1d9632a47244a72" prot="public" virt="non-virtual"><scope>ouzel::graphics::Shader</scope><name>init</name></member>
      <member refid="d2/d21/classouzel_1_1_noncopyable_1a7a2f85c0ab3f895335b786cc15c9380c" prot="protected" virt="non-virtual"><scope>ouzel::graphics::Shader</scope><name>Noncopyable</name></member>
      <member refid="d2/d21/classouzel_1_1_noncopyable_1ad9d3cfa9a715f3f504fa29c752aba9c0" prot="protected" virt="non-virtual"><scope>ouzel::graphics::Shader</scope><name>Noncopyable</name></member>
      <member refid="d2/d21/classouzel_1_1_noncopyable_1a3e3ff963a1d9b15ddd3d88709781053a" prot="protected" virt="non-virtual"><scope>ouzel::graphics::Shader</scope><name>Noncopyable</name></member>
      <member refid="d2/d21/classouzel_1_1_noncopyable_1a68a1b19771512dc1470956f1e46f293d" prot="protected" virt="non-virtual"><scope>ouzel::graphics::Shader</scope><name>operator=</name></member>
      <member refid="d2/d21/classouzel_1_1_noncopyable_1ac659ce30508af407abcbce377390f719" prot="protected" virt="non-virtual"><scope>ouzel::graphics::Shader</scope><name>operator=</name></member>
      <member refid="d4/d6b/classouzel_1_1graphics_1_1_shader_1aa344c189885cc30dfe8183ae4817bbb3" prot="private" virt="non-virtual"><scope>ouzel::graphics::Shader</scope><name>pixelShaderFilename</name></member>
      <member refid="d4/d6b/classouzel_1_1graphics_1_1_shader_1a1e8eb187c52b2d7348eb3507307ecfac" prot="private" virt="non-virtual"><scope>ouzel::graphics::Shader</scope><name>resource</name></member>
      <member refid="d4/d6b/classouzel_1_1graphics_1_1_shader_1a06e574c5e1cb83349d779a7879d47752" prot="public" virt="non-virtual"><scope>ouzel::graphics::Shader</scope><name>Shader</name></member>
      <member refid="d4/d6b/classouzel_1_1graphics_1_1_shader_1aa60f586f5c773797622c2a2a9b0add84" prot="private" virt="non-virtual"><scope>ouzel::graphics::Shader</scope><name>vertexAttributes</name></member>
      <member refid="d4/d6b/classouzel_1_1graphics_1_1_shader_1aad6991e4f55856f4419f220111f789b0" prot="private" virt="non-virtual"><scope>ouzel::graphics::Shader</scope><name>vertexShaderFilename</name></member>
      <member refid="d2/d21/classouzel_1_1_noncopyable_1adc28530ad760541edbd75fd2f7054557" prot="protected" virt="non-virtual"><scope>ouzel::graphics::Shader</scope><name>~Noncopyable</name></member>
      <member refid="d4/d6b/classouzel_1_1graphics_1_1_shader_1af112b25bc5273ee41c850fd23a92ec37" prot="public" virt="virtual"><scope>ouzel::graphics::Shader</scope><name>~Shader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
