<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="df/dce/_box3_8cpp" kind="file" language="C++">
    <compoundname>Box3.cpp</compoundname>
    <includes local="no">algorithm</includes>
    <includes refid="de/d0f/_box3_8hpp" local="yes">Box3.hpp</includes>
    <includes refid="d8/d32/_box2_8hpp" local="yes">Box2.hpp</includes>
    <incdepgraph>
      <node id="12234">
        <label>limits</label>
      </node>
      <node id="12233">
        <label>cstdint</label>
      </node>
      <node id="12240">
        <label>cmath</label>
      </node>
      <node id="12232">
        <label>Box3.hpp</label>
        <link refid="de/d0f/_box3_8hpp_source"/>
        <childnode refid="12233" relation="include">
        </childnode>
        <childnode refid="12234" relation="include">
        </childnode>
        <childnode refid="12235" relation="include">
        </childnode>
        <childnode refid="12237" relation="include">
        </childnode>
      </node>
      <node id="12238">
        <label>Box2.hpp</label>
        <link refid="d8/d32/_box2_8hpp_source"/>
        <childnode refid="12233" relation="include">
        </childnode>
        <childnode refid="12234" relation="include">
        </childnode>
        <childnode refid="12239" relation="include">
        </childnode>
        <childnode refid="12241" relation="include">
        </childnode>
      </node>
      <node id="12241">
        <label>math/Size2.hpp</label>
        <link refid="db/d59/_size2_8hpp_source"/>
        <childnode refid="12239" relation="include">
        </childnode>
      </node>
      <node id="12230">
        <label>ouzel/math/Box3.cpp</label>
        <link refid="df/dce/_box3_8cpp"/>
        <childnode refid="12231" relation="include">
        </childnode>
        <childnode refid="12232" relation="include">
        </childnode>
        <childnode refid="12238" relation="include">
        </childnode>
      </node>
      <node id="12237">
        <label>math/Size3.hpp</label>
        <link refid="de/da6/_size3_8hpp_source"/>
        <childnode refid="12235" relation="include">
        </childnode>
      </node>
      <node id="12236">
        <label>cstddef</label>
      </node>
      <node id="12239">
        <label>math/Vector2.hpp</label>
        <link refid="d3/d12/_vector2_8hpp_source"/>
        <childnode refid="12236" relation="include">
        </childnode>
        <childnode refid="12240" relation="include">
        </childnode>
      </node>
      <node id="12231">
        <label>algorithm</label>
      </node>
      <node id="12235">
        <label>math/Vector3.hpp</label>
        <link refid="d2/d6a/_vector3_8hpp_source"/>
        <childnode refid="12236" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="d6/d09/namespaceouzel">ouzel</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2017<sp/>Elviss<sp/>Strazdins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Ouzel<sp/>engine.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Box3.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Box2.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d6/d09/namespaceouzel" kindref="compound">ouzel</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>Box3::Box3(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box2&amp;<sp/>box):</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min(box.min),<sp/>max(box.max)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>Box3&amp;<sp/>Box3::operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box2&amp;<sp/>box)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>box.min;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>box.max;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Box3::getCorners(Vector3*<sp/>dst)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="24"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Near<sp/>face,<sp/>specified<sp/>counter-clockwise<sp/>looking<sp/>towards<sp/>the<sp/>origin<sp/>from<sp/>the<sp/>positive<sp/>z-axis.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Left-bottom-front.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[0].set(min.x,<sp/>min.y,<sp/>min.z);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Right-bottom-front.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[1].set(max.x,<sp/>min.y,<sp/>min.z);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Right-top-front.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[2].set(max.x,<sp/>max.y,<sp/>min.z);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Left-top-front.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[3].set(min.x,<sp/>max.y,<sp/>min.z);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Left-bottom-back.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[0].set(min.x,<sp/>min.y,<sp/>max.z);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Right-bottom-back.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[1].set(max.x,<sp/>min.y,<sp/>max.z);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Right-top-back.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[2].set(max.x,<sp/>max.y,<sp/>max.z);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Left-top-back.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[3].set(min.x,<sp/>max.y,<sp/>max.z);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Box3::merge(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box3&amp;<sp/>box)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>new<sp/>minimum<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min.x<sp/>=<sp/>std::min(min.x,<sp/>box.min.x);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min.y<sp/>=<sp/>std::min(min.y,<sp/>box.min.y);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min.z<sp/>=<sp/>std::min(min.z,<sp/>box.min.z);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>new<sp/>maximum<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max.x<sp/>=<sp/>std::max(max.x,<sp/>box.max.x);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max.y<sp/>=<sp/>std::max(max.y,<sp/>box.max.y);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max.z<sp/>=<sp/>std::max(max.y,<sp/>box.max.z);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="ouzel/math/Box3.cpp"/>
  </compounddef>
</doxygen>
